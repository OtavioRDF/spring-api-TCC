version: "3.1"

services:
  quests-spring:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: quests-spring
    ports:
      - 8080:8080
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/prometheus"]
      interval: 15s
      timeout: 2s
      retries: 3
    depends_on:
      - database
    networks:
      - monitoring
      
  database:
    image: postgres:13.1
    env_file:
      - .env
    ports:
      - 5432:5432
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command: 
     - '--web.enable-remote-write-receiver'
     - '--enable-feature=native-histograms'
     - '--config.file=/etc/prometheus/prometheus.yml'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - monitoring

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3001:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - monitoring

  k6:
    image: grafana/k6
    container_name: k6
    command: [
      "run",
      "--out", "experimental-prometheus-rw",
      "/scripts/test-loader.js"
    ]
    environment:
      K6_PROMETHEUS_RW_SERVER_URL: "http://prometheus:9090/api/v1/write"
      K6_PROMETHEUS_RW_TREND_AS_NATIVE_HISTOGRAM: true
    volumes:
      - ./k6:/scripts
    depends_on:
      quests-spring:
        condition: service_healthy
    networks:
      - monitoring
volumes:
  grafana-storage:

networks:
  monitoring:
    driver: bridge
